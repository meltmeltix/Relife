/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Roboto Flex;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root,
[data-theme] {
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  color: var(--fallback-bc,oklch(var(--bc)/1));
}

@supports not (color: oklch(0% 0 0)) {
  :root {
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
}

html {
  -webkit-tap-highlight-color: transparent;
}

:root {
  --p: 71.8795% 0.113229 100.651362;
  --b2: 88.5953% 0.014811 102.832117;
  --b3: 81.9269% 0.013696 102.832117;
  --bc: 19.0528% 0.003185 102.832117;
  --pc: 14.3759% 0.022646 100.651362;
  --sc: 16.7558% 0.01462 134.606493;
  --ac: 11.95% 0.023018 140.113753;
  --nc: 13.0762% 0.002161 87.498481;
  --inc: 89.5458% 0.018853 229.193556;
  --suc: 89.3682% 0.02956 140.92412;
  --wac: 89.7066% 0.019871 85.953723;
  --erc: 90.0824% 0.036491 33.746133;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --s: 83.7791% 0.073098 134.606493;
  --a: 59.7498% 0.11509 140.113753;
  --n: 65.3811% 0.010807 87.498481;
  --b1: 95.2638% 0.015926 102.832117;
  --in: 47.729% 0.094267 229.193556;
  --su: 46.841% 0.1478 140.92412;
  --wa: 48.5331% 0.099354 85.953723;
  --er: 50.4122% 0.182456 33.746133;
}

@media (prefers-color-scheme: dark) {
  :root {
    --p: 71.8795% 0.113229 100.651362;
    --b2: 19.9932% 0.02038 104.021021;
    --b3: 18.4884% 0.018846 104.021021;
    --bc: 84.2996% 0.004383 104.021021;
    --pc: 14.3759% 0.022646 100.651362;
    --sc: 88.6156% 0.016471 135.526563;
    --ac: 14.2268% 0.022341 139.71217;
    --nc: 13.0762% 0.002161 87.498481;
    --inc: 16.43% 0.022255 230.221506;
    --suc: 16.2645% 0.03321 138.887738;
    --wac: 16.6329% 0.032934 85.369012;
    --erc: 16.7248% 0.018351 33.998591;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --s: 43.0778% 0.082353 135.526563;
    --a: 71.1338% 0.111705 139.71217;
    --n: 65.3811% 0.010807 87.498481;
    --b1: 21.4981% 0.021914 104.021021;
    --in: 82.1499% 0.111274 230.221506;
    --su: 81.3224% 0.166049 138.887738;
    --wa: 83.1645% 0.164669 85.369012;
    --er: 83.6242% 0.091755 33.998591;
  }
}

[data-theme=light] {
  --p: 71.8795% 0.113229 100.651362;
  --b2: 88.5953% 0.014811 102.832117;
  --b3: 81.9269% 0.013696 102.832117;
  --bc: 19.0528% 0.003185 102.832117;
  --pc: 14.3759% 0.022646 100.651362;
  --sc: 16.7558% 0.01462 134.606493;
  --ac: 11.95% 0.023018 140.113753;
  --nc: 13.0762% 0.002161 87.498481;
  --inc: 89.5458% 0.018853 229.193556;
  --suc: 89.3682% 0.02956 140.92412;
  --wac: 89.7066% 0.019871 85.953723;
  --erc: 90.0824% 0.036491 33.746133;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --s: 83.7791% 0.073098 134.606493;
  --a: 59.7498% 0.11509 140.113753;
  --n: 65.3811% 0.010807 87.498481;
  --b1: 95.2638% 0.015926 102.832117;
  --in: 47.729% 0.094267 229.193556;
  --su: 46.841% 0.1478 140.92412;
  --wa: 48.5331% 0.099354 85.953723;
  --er: 50.4122% 0.182456 33.746133;
}

[data-theme=dark] {
  --p: 71.8795% 0.113229 100.651362;
  --b2: 19.9932% 0.02038 104.021021;
  --b3: 18.4884% 0.018846 104.021021;
  --bc: 84.2996% 0.004383 104.021021;
  --pc: 14.3759% 0.022646 100.651362;
  --sc: 88.6156% 0.016471 135.526563;
  --ac: 14.2268% 0.022341 139.71217;
  --nc: 13.0762% 0.002161 87.498481;
  --inc: 16.43% 0.022255 230.221506;
  --suc: 16.2645% 0.03321 138.887738;
  --wac: 16.6329% 0.032934 85.369012;
  --erc: 16.7248% 0.018351 33.998591;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --s: 43.0778% 0.082353 135.526563;
  --a: 71.1338% 0.111705 139.71217;
  --n: 65.3811% 0.010807 87.498481;
  --b1: 21.4981% 0.021914 104.021021;
  --in: 82.1499% 0.111274 230.221506;
  --su: 81.3224% 0.166049 138.887738;
  --wa: 83.1645% 0.164669 85.369012;
  --er: 83.6242% 0.091755 33.998591;
}

@font-face {
  font-family: 'Noto Serif';

  src: url(/resources/fonts/NotoSerif.ttf) format('truetype');
}

@font-face {
  font-family: 'Roboto Flex';

  src: url(/resources/fonts/RobotoFlex.ttf) format('truetype');
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.tw-dy-btm-nav {
  position: fixed;
  bottom: 0px;
  left: 0px;
  right: 0px;
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  padding-bottom: env(safe-area-inset-bottom);
  height: 4rem;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  color: currentColor;
}

.tw-dy-btm-nav > * {
  position: relative;
  display: flex;
  height: 100%;
  flex-basis: 100%;
  cursor: pointer;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  border-color: currentColor;
}

@media (hover:hover) {
  .tw-dy-link-hover:hover {
    text-decoration-line: underline;
  }

  .tw-dy-menu li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn):active,
.tw-dy-menu li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn).tw-dy-active,
.tw-dy-menu li > details > summary:active {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }
}

.tw-dy-btn {
  display: inline-flex;
  height: 3rem;
  min-height: 3rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-radius: var(--rounded-btn, 0.5rem);
  border-color: transparent;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1em;
  gap: 0.5rem;
  font-weight: 600;
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}

.tw-dy-btn-disabled,
  .tw-dy-btn[disabled],
  .tw-dy-btn:disabled {
  pointer-events: none;
}

.tw-dy-btn-square {
  height: 3rem;
  width: 3rem;
  padding: 0px;
}

:where(.tw-dy-btn:is(input[type="checkbox"])),
:where(.tw-dy-btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.tw-dy-btn:is(input[type="checkbox"]):after,
.tw-dy-btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}

.tw-dy-divider {
  display: flex;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 1rem;
  white-space: nowrap;
}

.tw-dy-divider:before,
  .tw-dy-divider:after {
  height: 0.125rem;
  width: 100%;
  flex-grow: 1;
  --tw-content: '';
  content: var(--tw-content);
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.tw-dy-drawer {
  position: relative;
  display: grid;
  grid-auto-columns: max-content auto;
  width: 100%;
}

.tw-dy-drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: 0px;
}

.tw-dy-drawer-side {
  pointer-events: none;
  position: fixed;
  inset-inline-start: 0px;
  top: 0px;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-x: hidden;
  overflow-y: hidden;
  overscroll-behavior: contain;
  height: 100vh;
  height: 100dvh;
}

.tw-dy-drawer-side > .tw-dy-drawer-overlay {
  position: sticky;
  top: 0px;
  place-self: stretch;
  cursor: pointer;
  background-color: transparent;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
}

.tw-dy-drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 300ms;
  will-change: transform;
  transform: translateX(-100%);
}

[dir="rtl"] .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transform: translateX(100%);
}

.tw-dy-drawer-toggle {
  position: fixed;
  height: 0px;
  width: 0px;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0;
}

.tw-dy-drawer-toggle:checked ~ .tw-dy-drawer-side {
  pointer-events: auto;
  visibility: visible;
  overflow-y: auto;
}

.tw-dy-drawer-toggle:checked ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transform: translateX(0%);
}

.tw-dy-drawer-end .tw-dy-drawer-toggle ~ .tw-dy-drawer-content {
  grid-column-start: 1;
}

.tw-dy-drawer-end .tw-dy-drawer-toggle ~ .tw-dy-drawer-side {
  grid-column-start: 2;
  justify-items: end;
}

.tw-dy-drawer-end .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transform: translateX(100%);
}

[dir="rtl"] .tw-dy-drawer-end .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transform: translateX(-100%);
}

.tw-dy-drawer-end .tw-dy-drawer-toggle:checked ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transform: translateX(0%);
}

.tw-dy-dropdown {
  position: relative;
  display: inline-block;
}

.tw-dy-dropdown > *:not(summary):focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tw-dy-dropdown .tw-dy-dropdown-content {
  position: absolute;
}

.tw-dy-dropdown:is(:not(details)) .tw-dy-dropdown-content {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  visibility: hidden;
  opacity: 0;
  transform-origin: top;
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
}

.tw-dy-dropdown-end .tw-dy-dropdown-content {
  inset-inline-end: 0px;
}

.tw-dy-dropdown-left .tw-dy-dropdown-content {
  bottom: auto;
  inset-inline-end: 100%;
  top: 0px;
  transform-origin: right;
}

.tw-dy-dropdown-right .tw-dy-dropdown-content {
  bottom: auto;
  inset-inline-start: 100%;
  top: 0px;
  transform-origin: left;
}

.tw-dy-dropdown-bottom .tw-dy-dropdown-content {
  bottom: auto;
  top: 100%;
  transform-origin: top;
}

.tw-dy-dropdown-top .tw-dy-dropdown-content {
  bottom: 100%;
  top: auto;
  transform-origin: bottom;
}

.tw-dy-dropdown-end.tw-dy-dropdown-right .tw-dy-dropdown-content {
  bottom: 0px;
  top: auto;
}

.tw-dy-dropdown-end.tw-dy-dropdown-left .tw-dy-dropdown-content {
  bottom: 0px;
  top: auto;
}

.tw-dy-dropdown.tw-dy-dropdown-open .tw-dy-dropdown-content,
.tw-dy-dropdown:not(.tw-dy-dropdown-hover):focus .tw-dy-dropdown-content,
.tw-dy-dropdown:focus-within .tw-dy-dropdown-content {
  visibility: visible;
  opacity: 1;
}

@media (hover: hover) {
  .tw-dy-dropdown.tw-dy-dropdown-hover:hover .tw-dy-dropdown-content {
    visibility: visible;
    opacity: 1;
  }

  .tw-dy-btm-nav > *.tw-dy-disabled:hover,
      .tw-dy-btm-nav > *[disabled]:hover {
    pointer-events: none;
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
  }

  .tw-dy-btn:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)) {
    .tw-dy-btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .tw-dy-btn:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)) {
    .tw-dy-btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .tw-dy-btn:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)) {
    .tw-dy-btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .tw-dy-btn.tw-dy-glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }

  .tw-dy-btn-ghost:hover {
    border-color: transparent;
  }

  @supports (color: oklch(0% 0 0)) {
    .tw-dy-btn-ghost:hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
    }
  }

  .tw-dy-btn-ghost:hover {
    border-color: transparent;
  }

  @supports (color: oklch(0% 0 0)) {
    .tw-dy-btn-ghost:hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
    }
  }

  .tw-dy-btn-outline.tw-dy-btn-primary:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn-outline.tw-dy-btn-primary:hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  .tw-dy-btn-outline.tw-dy-btn-primary:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn-outline.tw-dy-btn-primary:hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  .tw-dy-btn-outline.tw-dy-btn-secondary:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn-outline.tw-dy-btn-secondary:hover {
      background-color: color-mix(in oklab, var(--fallback-s,oklch(var(--s)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-s,oklch(var(--s)/1)) 90%, black);
    }
  }

  .tw-dy-btn-outline.tw-dy-btn-secondary:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn-outline.tw-dy-btn-secondary:hover {
      background-color: color-mix(in oklab, var(--fallback-s,oklch(var(--s)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-s,oklch(var(--s)/1)) 90%, black);
    }
  }

  .tw-dy-btn-disabled:hover,
    .tw-dy-btn[disabled]:hover,
    .tw-dy-btn:disabled:hover {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .tw-dy-btn:is(input[type="checkbox"]:checked):hover, .tw-dy-btn:is(input[type="radio"]:checked):hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  .tw-dy-dropdown.tw-dy-dropdown-hover:hover .tw-dy-dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }

  :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }

  :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }

  :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }
}

.tw-dy-dropdown:is(details) summary::-webkit-details-marker {
  display: none;
}

.tw-dy-input {
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 2;
  line-height: 1.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}

.tw-dy-input[type="number"]::-webkit-inner-spin-button,
.tw-dy-input-md[type="number"]::-webkit-inner-spin-button {
  margin-top: -1rem;
  margin-bottom: -1rem;
  margin-inline-end: -1rem;
}

.tw-dy-join .tw-dy-dropdown .tw-dy-join-item:first-child:not(:last-child),
  .tw-dy-join *:first-child:not(:last-child) .tw-dy-dropdown .tw-dy-join-item {
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}

.tw-dy-link {
  cursor: pointer;
  text-decoration-line: underline;
}

.tw-dy-link-hover {
  text-decoration-line: none;
}

.tw-dy-menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 0.5rem;
}

.tw-dy-menu :where(li ul) {
  position: relative;
  white-space: nowrap;
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}

.tw-dy-menu :where(li:not(.tw-dy-menu-title) > *:not(ul, details, .tw-dy-menu-title, .tw-dy-btn)), .tw-dy-menu :where(li:not(.tw-dy-menu-title) > details > summary:not(.tw-dy-menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.tw-dy-menu li.tw-dy-disabled {
  cursor: not-allowed;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  color: var(--fallback-bc,oklch(var(--bc)/0.3));
}

.tw-dy-menu :where(li > .tw-dy-menu-dropdown:not(.tw-dy-menu-dropdown-show)) {
  display: none;
}

:where(.tw-dy-menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

:where(.tw-dy-menu li) .tw-dy-badge {
  justify-self: end;
}

.tw-dy-navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding, 0.5rem);
  min-height: 4rem;
  width: 100%;
}

:where(.tw-dy-navbar > *:not(script, style)) {
  display: inline-flex;
  align-items: center;
}

.tw-dy-btm-nav > *:not(.tw-dy-active) {
  padding-top: 0.125rem;
}

.tw-dy-btm-nav > *:where(.tw-dy-active) {
  border-top-width: 2px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}

.tw-dy-btm-nav > *.tw-dy-disabled,
    .tw-dy-btm-nav > *[disabled] {
  pointer-events: none;
  --tw-border-opacity: 0;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}

.tw-dy-btm-nav > * .tw-dy-label {
  font-size: 1rem;
  line-height: 1.5rem;
}

.tw-dy-btn:active:hover,
  .tw-dy-btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}

@supports not (color: oklch(0% 0 0)) {
  .tw-dy-btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .tw-dy-btn-primary {
    --btn-color: var(--fallback-p);
  }

  .tw-dy-btn-secondary {
    --btn-color: var(--fallback-s);
  }
}

@supports (color: color-mix(in oklab, black, black)) {
  .tw-dy-btn-outline.tw-dy-btn-primary.tw-dy-btn-active {
    background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
  }

  .tw-dy-btn-outline.tw-dy-btn-secondary.tw-dy-btn-active {
    background-color: color-mix(in oklab, var(--fallback-s,oklch(var(--s)/1)) 90%, black);
    border-color: color-mix(in oklab, var(--fallback-s,oklch(var(--s)/1)) 90%, black);
  }
}

.tw-dy-btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

.tw-dy-btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}

@supports (color: oklch(0% 0 0)) {
  .tw-dy-btn-primary {
    --btn-color: var(--p);
  }

  .tw-dy-btn-secondary {
    --btn-color: var(--s);
  }
}

.tw-dy-btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity)));
  outline-color: var(--fallback-s,oklch(var(--s)/1));
}

.tw-dy-btn.tw-dy-glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}

.tw-dy-btn.tw-dy-glass.tw-dy-btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.tw-dy-btn-ghost {
  border-width: 1px;
  border-color: transparent;
  background-color: transparent;
  color: currentColor;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}

.tw-dy-btn-ghost.tw-dy-btn-active {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.tw-dy-btn-outline.tw-dy-btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}

.tw-dy-btn-outline.tw-dy-btn-primary.tw-dy-btn-active {
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
}

.tw-dy-btn-outline.tw-dy-btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity)));
}

.tw-dy-btn-outline.tw-dy-btn-secondary.tw-dy-btn-active {
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity)));
}

.tw-dy-btn.tw-dy-btn-disabled,
  .tw-dy-btn[disabled],
  .tw-dy-btn:disabled {
  --tw-border-opacity: 0;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.2;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}

.tw-dy-btn:is(input[type="checkbox"]:checked),
.tw-dy-btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
}

.tw-dy-btn:is(input[type="checkbox"]:checked):focus-visible, .tw-dy-btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }

  40% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  100% {
    background-position-y: 0;
  }
}

.tw-dy-divider:not(:empty) {
  gap: 1rem;
}

.tw-dy-drawer-toggle:checked ~ .tw-dy-drawer-side > .tw-dy-drawer-overlay {
  background-color: #0006;
}

.tw-dy-drawer-toggle:focus-visible ~ .tw-dy-drawer-content label.tw-dy-drawer-button {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

.tw-dy-dropdown.tw-dy-dropdown-open .tw-dy-dropdown-content,
.tw-dy-dropdown:focus .tw-dy-dropdown-content,
.tw-dy-dropdown:focus-within .tw-dy-dropdown-content {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tw-dy-input input {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
  background-color: transparent;
}

.tw-dy-input input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tw-dy-input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}

.tw-dy-input-bordered {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.tw-dy-input:focus,
  .tw-dy-input:focus-within {
  box-shadow: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.tw-dy-input-disabled,
  .tw-dy-input:disabled,
  .tw-dy-input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
}

.tw-dy-input-disabled::-moz-placeholder, .tw-dy-input:disabled::-moz-placeholder, .tw-dy-input[disabled]::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}

.tw-dy-input-disabled::placeholder,
  .tw-dy-input:disabled::placeholder,
  .tw-dy-input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}

.tw-dy-input::-webkit-date-and-time-value {
  text-align: inherit;
}

@supports (color:color-mix(in oklab,black,black)) {
  @media (hover:hover) {
    .tw-dy-link-accent:hover {
      color: color-mix(in oklab,var(--fallback-a,oklch(var(--a)/1)) 80%,black);
    }
  }
}

.tw-dy-link-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity)));
}

.tw-dy-link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tw-dy-link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

:where(.tw-dy-menu li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}

.tw-dy-menu :where(li ul):before {
  position: absolute;
  bottom: 0.75rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  content: "";
}

.tw-dy-menu :where(li:not(.tw-dy-menu-title) > *:not(ul, details, .tw-dy-menu-title, .tw-dy-btn)),
.tw-dy-menu :where(li:not(.tw-dy-menu-title) > details > summary:not(.tw-dy-menu-title)) {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-radius: var(--rounded-btn, 0.5rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}

:where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn).tw-dy-focus, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn):focus, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):is(summary):not(.tw-dy-active, .tw-dy-btn):focus-visible, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn).tw-dy-focus, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn):focus, :where(.tw-dy-menu li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):is(summary):not(.tw-dy-active, .tw-dy-btn):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tw-dy-menu li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn):active,
.tw-dy-menu li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn).tw-dy-active,
.tw-dy-menu li > details > summary:active {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
}

.tw-dy-menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}

.tw-dy-menu :where(li > details > summary):after,
.tw-dy-menu :where(li > .tw-dy-menu-dropdown-toggle):after {
  justify-self: end;
  display: block;
  margin-top: -0.5rem;
  height: 0.5rem;
  width: 0.5rem;
  transform: rotate(45deg);
  transition-property: transform, margin-top;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}

.tw-dy-menu :where(li > details[open] > summary):after,
.tw-dy-menu :where(li > .tw-dy-menu-dropdown-toggle.tw-dy-menu-dropdown-show):after {
  transform: rotate(225deg);
  margin-top: 0;
}

.tw-dy-mockup-browser .tw-dy-mockup-browser-toolbar .tw-dy-input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  padding-left: 2rem;
  direction: ltr;
}

.tw-dy-mockup-browser .tw-dy-mockup-browser-toolbar .tw-dy-input:before {
  content: "";
  position: absolute;
  left: 0.5rem;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}

.tw-dy-mockup-browser .tw-dy-mockup-browser-toolbar .tw-dy-input:after {
  content: "";
  position: absolute;
  left: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}

@keyframes modal-pop {
  0% {
    opacity: 0;
  }
}

@keyframes progress-loading {
  50% {
    background-position-x: -115%;
  }
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset,
      0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset;
  }

  50% {
    box-shadow: 0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset,
      0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset;
  }

  100% {
    box-shadow: 0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset,
      0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset;
  }
}

@keyframes rating-pop {
  0% {
    transform: translateY(-0.125em);
  }

  40% {
    transform: translateY(-0.125em);
  }

  100% {
    transform: translateY(0);
  }
}

@keyframes skeleton {
  from {
    background-position: 150%;
  }

  to {
    background-position: -50%;
  }
}

.tw-dy-table tr.tw-dy-active,
  .tw-dy-table tr.tw-dy-active:nth-child(even),
  .tw-dy-table-zebra tbody tr:nth-child(even) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
}

.tw-dy-table-zebra tr.tw-dy-active,
    .tw-dy-table-zebra tr.tw-dy-active:nth-child(even),
    .tw-dy-table-zebra-zebra tbody tr:nth-child(even) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
}

@keyframes toast-pop {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.tw-dy-btm-nav-xs > *:where(.tw-dy-active) {
  border-top-width: 1px;
}

.tw-dy-btm-nav-sm {
  height: 3rem;
}

.tw-dy-btm-nav-sm > *:where(.tw-dy-active) {
  border-top-width: 2px;
}

.tw-dy-btm-nav-sm .tw-dy-btm-nav-label {
  font-size: 0.75rem;
  line-height: 1rem;
}

.tw-dy-btm-nav-md > *:where(.tw-dy-active) {
  border-top-width: 2px;
}

.tw-dy-btm-nav-lg > *:where(.tw-dy-active) {
  border-top-width: 4px;
}

.tw-dy-btn-square:where(.tw-dy-btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  padding: 0px;
}

.tw-dy-btn-square:where(.tw-dy-btn-sm) {
  height: 2rem;
  width: 2rem;
  padding: 0px;
}

.tw-dy-btn-square:where(.tw-dy-btn-md) {
  height: 3rem;
  width: 3rem;
  padding: 0px;
}

.tw-dy-btn-square:where(.tw-dy-btn-lg) {
  height: 4rem;
  width: 4rem;
  padding: 0px;
}

.tw-dy-drawer-open > .tw-dy-drawer-toggle {
  display: none;
}

.tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side {
  pointer-events: auto;
  visibility: visible;
  position: sticky;
  display: block;
  width: auto;
  overscroll-behavior: auto;
}

.tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transform: translateX(0%);
}

[dir="rtl"] .tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
  transform: translateX(0%);
}

.tw-dy-drawer-open > .tw-dy-drawer-toggle:checked ~ .tw-dy-drawer-side {
  pointer-events: auto;
  visibility: visible;
}

.tw-dy-drawer-open > .tw-dy-drawer-side {
  overflow-y: auto;
}

html:has(.tw-dy-drawer-toggle:checked) {
  overflow-y: hidden;
  scrollbar-gutter: stable;
}

.tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > .tw-dy-drawer-overlay {
  cursor: default;
  background-color: transparent;
}

.tw-dy-btn {
  border-radius: 1rem;
}

.tw-dy-active {
  --tw-text-opacity: 1;
  color: rgb(180 166 75 / var(--tw-text-opacity));
}

@media (prefers-color-scheme: dark) {
  .tw-dy-active {
    --tw-text-opacity: 1;
    color: rgb(180 166 75 / var(--tw-text-opacity));
  }
}

.tw-dy-btm-nav {
  border-top-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgb(238 236 221 / var(--tw-border-opacity));
}

@media (min-width: 640px) {
  .tw-dy-btm-nav {
    display: none;
  }
}

@media (prefers-color-scheme: dark) {
  .tw-dy-btm-nav {
    --tw-border-opacity: 1;
    border-color: rgb(34 32 17 / var(--tw-border-opacity));
  }
}

@media (hover:hover) {
  .tw-dy-dropdown-content li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn):active,.tw-dy-dropdown-content li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn).tw-dy-active,.tw-dy-dropdown-content li > details > summary:active {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }
}

@media (hover: hover) {
  :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }

  :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }

  :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }

  :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0% 0 0)) {
    :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(.tw-dy-active, .tw-dy-btn):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }
}

.tw-dy-dropdown-content {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 0.5rem;
}

.tw-dy-dropdown-content :where(li ul) {
  position: relative;
  white-space: nowrap;
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}

.tw-dy-dropdown-content :where(li:not(.tw-dy-menu-title) > *:not(ul, details, .tw-dy-menu-title, .tw-dy-btn)),.tw-dy-dropdown-content :where(li:not(.tw-dy-menu-title) > details > summary:not(.tw-dy-menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.tw-dy-dropdown-content li.tw-dy-disabled {
  cursor: not-allowed;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  color: var(--fallback-bc,oklch(var(--bc)/0.3));
}

.tw-dy-dropdown-content :where(li > .tw-dy-menu-dropdown:not(.tw-dy-menu-dropdown-show)) {
  display: none;
}

:where(.tw-dy-dropdown-content li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

:where(.tw-dy-dropdown-content li) .tw-dy-badge {
  justify-self: end;
}

:where(.tw-dy-dropdown-content li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}

.tw-dy-dropdown-content :where(li ul):before {
  position: absolute;
  bottom: 0.75rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  content: "";
}

.tw-dy-dropdown-content :where(li:not(.tw-dy-menu-title) > *:not(ul, details, .tw-dy-menu-title, .tw-dy-btn)),.tw-dy-dropdown-content :where(li:not(.tw-dy-menu-title) > details > summary:not(.tw-dy-menu-title)) {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-radius: var(--rounded-btn, 0.5rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}

:where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn).tw-dy-focus, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn):focus, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > *:not(ul, details, .tw-dy-menu-title)):is(summary):not(.tw-dy-active, .tw-dy-btn):focus-visible, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn).tw-dy-focus, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):not(summary, .tw-dy-active, .tw-dy-btn):focus, :where(.tw-dy-dropdown-content li:not(.tw-dy-menu-title, .tw-dy-disabled) > details > summary:not(.tw-dy-menu-title)):is(summary):not(.tw-dy-active, .tw-dy-btn):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tw-dy-dropdown-content li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn):active,.tw-dy-dropdown-content li > *:not(ul, .tw-dy-menu-title, details, .tw-dy-btn).tw-dy-active,.tw-dy-dropdown-content li > details > summary:active {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
}

.tw-dy-dropdown-content :where(li > details > summary)::-webkit-details-marker {
  display: none;
}

.tw-dy-dropdown-content :where(li > details > summary):after,.tw-dy-dropdown-content :where(li > .tw-dy-menu-dropdown-toggle):after {
  justify-self: end;
  display: block;
  margin-top: -0.5rem;
  height: 0.5rem;
  width: 0.5rem;
  transform: rotate(45deg);
  transition-property: transform, margin-top;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}

.tw-dy-dropdown-content :where(li > details[open] > summary):after,.tw-dy-dropdown-content :where(li > .tw-dy-menu-dropdown-toggle.tw-dy-menu-dropdown-show):after {
  transform: rotate(225deg);
  margin-top: 0;
}

.tw-dy-dropdown-content {
  z-index: 1;
  width: 8rem;
  border-radius: var(--rounded-box, 1rem);
  --tw-bg-opacity: 1;
  background-color: rgb(220 218 188 / var(--tw-bg-opacity));
  padding: 0.5rem;
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (prefers-color-scheme: dark) {
  .tw-dy-dropdown-content {
    --tw-bg-opacity: 1;
    background-color: rgb(67 65 35 / var(--tw-bg-opacity));
  }
}

.tw-absolute {
  position: absolute;
}

.tw-relative {
  position: relative;
}

.tw-bottom-0 {
  bottom: 0px;
}

.tw-bottom-16 {
  bottom: 4rem;
}

.tw-right-0 {
  right: 0px;
}

.tw-right-3 {
  right: 0.75rem;
}

.tw-col-span-2 {
  grid-column: span 2 / span 2;
}

.tw-mb-1 {
  margin-bottom: 0.25rem;
}

.tw-mb-3 {
  margin-bottom: 0.75rem;
}

.tw-flex {
  display: flex;
}

.tw-inline-flex {
  display: inline-flex;
}

.tw-grid {
  display: grid;
}

.tw-hidden {
  display: none;
}

.tw-h-4 {
  height: 1rem;
}

.tw-h-5 {
  height: 1.25rem;
}

.tw-h-6 {
  height: 1.5rem;
}

.tw-h-\[100svh\] {
  height: 100svh;
}

.tw-h-\[32rem\] {
  height: 32rem;
}

.tw-h-full {
  height: 100%;
}

.tw-min-h-\[100svh\] {
  min-height: 100svh;
}

.tw-w-4 {
  width: 1rem;
}

.tw-w-5 {
  width: 1.25rem;
}

.tw-w-60 {
  width: 15rem;
}

.tw-w-full {
  width: 100%;
}

.tw-flex-1 {
  flex: 1 1 0%;
}

.tw-flex-none {
  flex: none;
}

.tw-grow {
  flex-grow: 1;
}

.tw-grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.tw-flex-col {
  flex-direction: column;
}

.tw-items-center {
  align-items: center;
}

.tw-justify-end {
  justify-content: flex-end;
}

.tw-gap-0 {
  gap: 0px;
}

.tw-gap-2 {
  gap: 0.5rem;
}

.tw-gap-x-3 {
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}

.tw-bg-light-base {
  --tw-bg-opacity: 1;
  background-color: rgb(241 240 228 / var(--tw-bg-opacity));
}

.tw-fill-light-base {
  fill: #f1f0e4;
}

.tw-fill-primary {
  fill: var(--fallback-p,oklch(var(--p)/1));
}

.tw-object-fill {
  -o-object-fit: fill;
     object-fit: fill;
}

.tw-p-0 {
  padding: 0px;
}

.tw-p-3 {
  padding: 0.75rem;
}

.tw-p-8 {
  padding: 2rem;
}

.tw-pb-20 {
  padding-bottom: 5rem;
}

.tw-pb-3 {
  padding-bottom: 0.75rem;
}

.tw-pl-3 {
  padding-left: 0.75rem;
}

.tw-text-center {
  text-align: center;
}

.tw-font-serif {
  font-family: Noto Serif;
}

.tw-text-\[1\.92rem\] {
  font-size: 1.92rem;
}

.tw-text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.tw-font-bold {
  font-weight: 700;
}

.tw-leading-3 {
  line-height: .75rem;
}

.tw-text-current {
  color: currentColor;
}

.tw-text-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}

.tw-no-underline {
  text-decoration-line: none;
}

.tw-opacity-70 {
  opacity: 0.7;
}

.tw-dy-inactive {
  --tw-text-opacity: 1;
  color: rgb(82 82 82 / var(--tw-text-opacity));
}

@media (prefers-color-scheme: dark) {
  .tw-dy-inactive {
    --tw-text-opacity: 1;
    color: rgb(163 163 163 / var(--tw-text-opacity));
  }
}

/* Complementary class for active */

.tw-inverted-background {
  --tw-bg-opacity: 1;
  background-color: rgb(220 218 188 / var(--tw-bg-opacity));
}

@media (prefers-color-scheme: dark) {
  .tw-inverted-background {
    --tw-bg-opacity: 1;
    background-color: rgb(67 65 35 / var(--tw-bg-opacity));
  }
}

@media (min-width: 640px) {
  .sm\:tw-dy-drawer-open > .tw-dy-drawer-toggle {
    display: none;
  }

  .sm\:tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side {
    pointer-events: auto;
    visibility: visible;
    position: sticky;
    display: block;
    width: auto;
    overscroll-behavior: auto;
  }

  .sm\:tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
    transform: translateX(0%);
  }

  [dir="rtl"] .sm\:tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > *:not(.tw-dy-drawer-overlay) {
    transform: translateX(0%);
  }

  .sm\:tw-dy-drawer-open > .tw-dy-drawer-toggle:checked ~ .tw-dy-drawer-side {
    pointer-events: auto;
    visibility: visible;
  }

  .sm\:tw-dy-drawer-open > .tw-dy-drawer-side {
    overflow-y: auto;
  }

  html:has(.sm\:tw-dy-drawer-open.sm\:tw-dy-drawer-open) {
    overflow-y: auto;
    scrollbar-gutter: auto;
  }

  .sm\:tw-dy-drawer-open > .tw-dy-drawer-toggle ~ .tw-dy-drawer-side > .tw-dy-drawer-overlay {
    cursor: default;
    background-color: transparent;
  }

  .sm\:tw-relative {
    position: relative;
  }

  .sm\:tw-block {
    display: block;
  }

  .sm\:tw-flex {
    display: flex;
  }

  .sm\:tw-grid {
    display: grid;
  }

  .sm\:tw-hidden {
    display: none;
  }

  .sm\:tw-w-\[55\%\] {
    width: 55%;
  }

  .sm\:tw-grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:tw-pb-8 {
    padding-bottom: 2rem;
  }
}

@media (min-width: 700px) {
  .sm-700\:tw-px-9 {
    padding-left: 2.25rem;
    padding-right: 2.25rem;
  }
}

@media (min-width: 768px) {
  .md\:tw-col-span-2 {
    grid-column: span 2 / span 2;
  }

  .md\:tw-col-span-3 {
    grid-column: span 3 / span 3;
  }

  .md\:tw-w-\[45\%\] {
    width: 45%;
  }

  .md\:tw-grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .md\:tw-px-20 {
    padding-left: 5rem;
    padding-right: 5rem;
  }
}

@media (min-width: 840px) {
  .md-840\:tw-px-32 {
    padding-left: 8rem;
    padding-right: 8rem;
  }
}

@media (min-width: 1024px) {
  .lg\:tw-px-48 {
    padding-left: 12rem;
    padding-right: 12rem;
  }
}

@media (min-width: 1280px) {
  .xl\:tw-px-\[18rem\] {
    padding-left: 18rem;
    padding-right: 18rem;
  }
}

@media (prefers-color-scheme: dark) {
  .dark\:tw-bg-dark-base {
    --tw-bg-opacity: 1;
    background-color: rgb(27 26 14 / var(--tw-bg-opacity));
  }

  .dark\:tw-fill-dark-base {
    fill: #1b1a0e;
  }

  .dark\:tw-fill-dark-primary {
    fill: #b4a64b;
  }

  .dark\:tw-text-dark-primary {
    --tw-text-opacity: 1;
    color: rgb(180 166 75 / var(--tw-text-opacity));
  }
}